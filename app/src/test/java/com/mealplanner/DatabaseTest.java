/*
 * This source file was generated by the Gradle 'init' task
 */
package com.mealplanner;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import org.junit.jupiter.api.Test;

class DatabaseTest {
    // @Test
    // void appHasAGreeting() {
    // App classUnderTest = new App();
    // assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    // }

    @Test
    void dbGetDishNotExist() {
        Database testdb = new Database(true);
        assertNull(testdb.getDishByName("Pizza"));
    }

    @Test
    void dbAddDish() {
        Database testdb = new Database(true);
        assertNull(testdb.getDishByName("Pizza"));
        Dish pizza = new Dish("Pizza");
        assertTrue(testdb.addDish(pizza));
        // assertEquals(pizza.getName(), testdb.getDishByName("Pizza").getName());
    }

    @Test
    void dbGetDishByName() {
        Database testdb = new Database(true);
        assertNull(testdb.getDishByName("Pizza"));
        Dish pizza = new Dish("Pizza");
        assertTrue(testdb.addDish(pizza));
        assertEquals(pizza.getName(), testdb.getDishByName("Pizza").getName());
    }

    // @Test
    // void dbAddDuplicateDish() {
    // Database testdb = new Database(true);
    // // assertNull(testdb.getDishByName("Pizza"));
    // Dish pizza = new Dish("Pizza");
    // assertTrue(testdb.addDish(pizza));
    // assertFalse(testdb.addDish(pizza));
    // }

    @Test
    void dbUpdateDish() {
        Database testdb = new Database(true);
        assertNull(testdb.getDishByName("Pizza"));
        Dish pizza = new Dish("Pizza");
        assertTrue(testdb.addDish(pizza));
        Dish fish = new Dish("Fish");
        assertTrue(testdb.updateDish(pizza, fish));
    }

    @Test
    void dbGetAllDishes() {
        Database testdb = new Database(true);
        Dish pizza = new Dish("Pizza");
        Dish fish = new Dish("Fish");
        Dish taco = new Dish("Taco");
        assertTrue(testdb.addDish(pizza));
        assertTrue(testdb.addDish(fish));
        assertTrue(testdb.addDish(taco));
        ArrayList<Dish> allDishes = testdb.getAllDishes();
        assertEquals(3, allDishes.size());
    }

    @Test
    void dbDeleteDish() {
        Database testdb = new Database(true);
        Dish pizza = new Dish("Pizza");
        pizza.addIngredient(new Ingredient("Cheese", Unit.CUP, 8));
        testdb.addDish(pizza);
        ArrayList<Dish> dishes = testdb.getAllDishes();
        int originalDishesSize = dishes.size();
        assertTrue(testdb.deleteDish(pizza));
        dishes = testdb.getAllDishes();
        int newDishesSize = dishes.size();
        assertEquals(originalDishesSize - 1, newDishesSize);
        assertTrue(testdb.getDishByName("Pizza") == null);
    }
}
